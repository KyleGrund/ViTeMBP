/*
 * Video Telemetry for Mountain Bike Platform back-end services.
 * Copyright (C) 2017 Kyle Grund
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.vitembp.embedded.gui800x480;

import com.vitembp.embedded.hardware.Calibrator;
import com.vitembp.embedded.hardware.HardwareInterface;

/**
 * The sensors menu interface.
 */
public class SensorsMenu extends javax.swing.JDialog {
    /**
     * The calibrator that is currently being used.
     */
    private Calibrator sensorCalibator;
    
    /**
     * Creates new form CaptureStatus
     * @param parent The parent frame of this window.
     * @param modal A boolean value indicating whether this window is modal.
     */
    public SensorsMenu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        // add all sensor names to the list
        HardwareInterface.getInterface().getSensors().keySet().forEach(this.jComboBoxSensorList::addItem);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNavBar = new javax.swing.JPanel();
        captureStatusButton = new javax.swing.JButton();
        sensorsSetupButton = new javax.swing.JButton();
        networkingButton = new javax.swing.JButton();
        optionsButton = new javax.swing.JButton();
        jPanelSystemID = new javax.swing.JPanel();
        jComboBoxSensorList = new javax.swing.JComboBox<>();
        calibrateSensorButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonNextStep = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaCalMessage = new javax.swing.JTextArea();
        jPanelSystemID1 = new javax.swing.JPanel();
        jComboBoxBindings = new javax.swing.JComboBox<>();
        jComboBoxBindings1 = new javax.swing.JComboBox<>();
        addBindingButton = new javax.swing.JButton();
        captureStatusButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 480));
        setMinimumSize(new java.awt.Dimension(800, 480));
        setName("captureStatus"); // NOI18N
        setUndecorated(true);
        setSize(new java.awt.Dimension(800, 480));

        jPanelNavBar.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelNavBar.setMaximumSize(new java.awt.Dimension(800, 65));
        jPanelNavBar.setMinimumSize(new java.awt.Dimension(800, 65));
        jPanelNavBar.setPreferredSize(new java.awt.Dimension(800, 65));

        captureStatusButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        captureStatusButton.setText("Captures");
        captureStatusButton.setMaximumSize(new java.awt.Dimension(193, 50));
        captureStatusButton.setMinimumSize(new java.awt.Dimension(193, 50));
        captureStatusButton.setPreferredSize(new java.awt.Dimension(193, 50));
        captureStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureStatusButtonActionPerformed(evt);
            }
        });
        jPanelNavBar.add(captureStatusButton);

        sensorsSetupButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sensorsSetupButton.setText("Sensors");
        sensorsSetupButton.setMaximumSize(new java.awt.Dimension(193, 50));
        sensorsSetupButton.setMinimumSize(new java.awt.Dimension(193, 50));
        sensorsSetupButton.setPreferredSize(new java.awt.Dimension(193, 50));
        jPanelNavBar.add(sensorsSetupButton);

        networkingButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        networkingButton.setText("Networking");
        networkingButton.setMaximumSize(new java.awt.Dimension(193, 50));
        networkingButton.setMinimumSize(new java.awt.Dimension(193, 50));
        networkingButton.setPreferredSize(new java.awt.Dimension(193, 50));
        jPanelNavBar.add(networkingButton);

        optionsButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        optionsButton.setText("Options");
        optionsButton.setMaximumSize(new java.awt.Dimension(193, 50));
        optionsButton.setMinimumSize(new java.awt.Dimension(193, 50));
        optionsButton.setPreferredSize(new java.awt.Dimension(193, 50));
        optionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsButtonActionPerformed(evt);
            }
        });
        jPanelNavBar.add(optionsButton);

        jPanelSystemID.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sensors", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanelSystemID.setMaximumSize(new java.awt.Dimension(800, 200));
        jPanelSystemID.setMinimumSize(new java.awt.Dimension(800, 200));
        jPanelSystemID.setPreferredSize(new java.awt.Dimension(800, 201));

        jComboBoxSensorList.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        calibrateSensorButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        calibrateSensorButton.setText("Calibrate Sensor");
        calibrateSensorButton.setMaximumSize(new java.awt.Dimension(193, 50));
        calibrateSensorButton.setMinimumSize(new java.awt.Dimension(193, 50));
        calibrateSensorButton.setPreferredSize(new java.awt.Dimension(193, 50));
        calibrateSensorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calibrateSensorButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Calibration"));

        jButtonNextStep.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonNextStep.setText("Next Step");
        jButtonNextStep.setEnabled(false);
        jButtonNextStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextStepActionPerformed(evt);
            }
        });

        jTextAreaCalMessage.setColumns(20);
        jTextAreaCalMessage.setRows(5);
        jTextAreaCalMessage.setText("Click 'Calibrate Sensor' button to being calibrating the selected sensor.");
        jScrollPane1.setViewportView(jTextAreaCalMessage);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNextStep, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNextStep))
        );

        javax.swing.GroupLayout jPanelSystemIDLayout = new javax.swing.GroupLayout(jPanelSystemID);
        jPanelSystemID.setLayout(jPanelSystemIDLayout);
        jPanelSystemIDLayout.setHorizontalGroup(
            jPanelSystemIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSystemIDLayout.createSequentialGroup()
                .addComponent(jComboBoxSensorList, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calibrateSensorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelSystemIDLayout.setVerticalGroup(
            jPanelSystemIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSystemIDLayout.createSequentialGroup()
                .addGroup(jPanelSystemIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSensorList, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calibrateSensorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSystemID1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bindings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        jPanelSystemID1.setMaximumSize(new java.awt.Dimension(800, 140));
        jPanelSystemID1.setMinimumSize(new java.awt.Dimension(800, 140));
        jPanelSystemID1.setPreferredSize(new java.awt.Dimension(800, 140));

        jComboBoxBindings.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBoxBindings.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxBindings1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBoxBindings1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addBindingButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        addBindingButton.setText("Add");
        addBindingButton.setMaximumSize(new java.awt.Dimension(193, 50));
        addBindingButton.setMinimumSize(new java.awt.Dimension(193, 50));
        addBindingButton.setPreferredSize(new java.awt.Dimension(193, 50));
        addBindingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBindingButtonActionPerformed(evt);
            }
        });

        captureStatusButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        captureStatusButton3.setText("Remove");
        captureStatusButton3.setMaximumSize(new java.awt.Dimension(193, 50));
        captureStatusButton3.setMinimumSize(new java.awt.Dimension(193, 50));
        captureStatusButton3.setPreferredSize(new java.awt.Dimension(193, 50));
        captureStatusButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureStatusButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Bound to");

        javax.swing.GroupLayout jPanelSystemID1Layout = new javax.swing.GroupLayout(jPanelSystemID1);
        jPanelSystemID1.setLayout(jPanelSystemID1Layout);
        jPanelSystemID1Layout.setHorizontalGroup(
            jPanelSystemID1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSystemID1Layout.createSequentialGroup()
                .addGroup(jPanelSystemID1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelSystemID1Layout.createSequentialGroup()
                        .addComponent(addBindingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(captureStatusButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addComponent(jComboBoxBindings, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxBindings1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelSystemID1Layout.setVerticalGroup(
            jPanelSystemID1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSystemID1Layout.createSequentialGroup()
                .addGroup(jPanelSystemID1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSystemID1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxBindings, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxBindings1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSystemID1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelSystemID1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBindingButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(captureStatusButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSystemID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelSystemID1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelNavBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanelSystemID, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSystemID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelNavBar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void captureStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureStatusButtonActionPerformed
        // show capture status
        GUI.showCaptureControl();
    }//GEN-LAST:event_captureStatusButtonActionPerformed

    private void calibrateSensorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calibrateSensorButtonActionPerformed
        // disable start button to prevent restarts
        this.calibrateSensorButton.setEnabled(false);
        
        // get the calibrator
        String sensorName = this.jComboBoxSensorList.getSelectedItem().toString();
        this.sensorCalibator = HardwareInterface.getInterface().getSensors().get(sensorName).getCalibrator();
        
        // enable the next button
        this.jButtonNextStep.setEnabled(true);
        
        // show the cal text
        showCalStep();
    }//GEN-LAST:event_calibrateSensorButtonActionPerformed

    private void addBindingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBindingButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBindingButtonActionPerformed

    private void captureStatusButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureStatusButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_captureStatusButton3ActionPerformed

    private void optionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsButtonActionPerformed
        GUI.showOptionsControl();
    }//GEN-LAST:event_optionsButtonActionPerformed

    private void jButtonNextStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextStepActionPerformed
        // go to the next step
        this.sensorCalibator.nextStep();
        
        // show calibration step
        showCalStep();
    }//GEN-LAST:event_jButtonNextStepActionPerformed

    private void showCalStep() {
        // if calibration is still running
        if (this.sensorCalibator.isCalibrating()) {
            // show current prompt
            this.jTextAreaCalMessage.setText(this.sensorCalibator.getStepPrompt());
        } else {
            // show cal results and reset buttons enable state
            this.jTextAreaCalMessage.setText(this.sensorCalibator.getCalibrationData());
            this.jButtonNextStep.setEnabled(false);
            this.calibrateSensorButton.setEnabled(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SensorsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SensorsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SensorsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SensorsMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SensorsMenu dialog = new SensorsMenu(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBindingButton;
    private javax.swing.JButton calibrateSensorButton;
    private javax.swing.JButton captureStatusButton;
    private javax.swing.JButton captureStatusButton3;
    private javax.swing.JButton jButtonNextStep;
    private javax.swing.JComboBox<String> jComboBoxBindings;
    private javax.swing.JComboBox<String> jComboBoxBindings1;
    private javax.swing.JComboBox<String> jComboBoxSensorList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelNavBar;
    private javax.swing.JPanel jPanelSystemID;
    private javax.swing.JPanel jPanelSystemID1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaCalMessage;
    private javax.swing.JButton networkingButton;
    private javax.swing.JButton optionsButton;
    private javax.swing.JButton sensorsSetupButton;
    // End of variables declaration//GEN-END:variables
}
